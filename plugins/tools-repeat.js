let handler = async (m, { conn, Text }) => {
	
    if (!Text) return conn.Antworten(m.chat, 'Harap Anmeldenan Text das/der/die wird direpeat!', m)
	
  conn.Antworten(m.chat, `
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
${Text}
`.trim(), m)
}
handler.help = ['repeat <Text>']
handler.tags = ['tools']
handler.command = /^(repeat)$/i
handler.owner = false
handler.mods = false
handler.Premium = false
handler.group = false
handler.private = false

handler.admin = false
handler.botAdmin = false

handler.fail = null
handler.limit = true

module.exports = handler
