let fetch = require('node-fetch');
let fs = require('fs');

let timeout = 3600000 // 1 Stunde in Millisekunden

let handler = async (m, { conn, args, usedPrefix, DevMode }) => {
    let u = global.db.data.users[m.sender];
    let time = u.lastclaim + 3600000;
    if (new Date - u.lastclaim < 3600000) 
        throw `*Du hast bereits nach einem Airdrop gesucht!* ü™ô\nBitte warte noch ${clockString(time - new Date())}, bevor du es erneut versuchen kannst.`;

    let ich = `${Math.floor(Math.random() * 101)}`.trim();
    let du = `${Math.floor(Math.random() * 81)}`.trim(); 
    let A = parseInt(ich);
    let K = parseInt(du);

    if (A > K) {
        let _m√ºll = Array.from({length: 50}, (_, i) => (i + 1).toString());
        let m√ºll = _m√ºll[Math.floor(Math.random() * _m√ºll.length)];
        let holz = _m√ºll[Math.floor(Math.random() * _m√ºll.length)];
        let stein = _m√ºll[Math.floor(Math.random() * _m√ºll.length)];
        conn.sendFile(m.chat, 'https://telegra.ph/file/60437ce6d807b605adf5e.jpg', 'zonk.jpg', `*Airdrop Abfall!* Der Inhalt war entt√§uschend...\n\n*Belohnungen:*\n‚Ä¢ *M√ºll:* ${m√ºll}\n‚Ä¢ *Holz:* ${holz}\n‚Ä¢ *Stein:* ${stein}`, m);
        u.m√ºll += parseInt(m√ºll);
        u.kayu += parseInt(holz);
        u.batu += parseInt(stein);
        u.lastclaim = new Date * 1;
    } else if (A < K) {
        let _limit = ['10', '20', '30'];
        let limit = _limit[Math.floor(Math.random() * _limit.length)];
        let _m√ºnzen = ['10000', '100000', '500000'];
        let m√ºnzen = _m√ºnzen[Math.floor(Math.random() * _m√ºnzen.length)];
        let _punkte = ['10000', '100000', '500000'];
        let punkte = _punkte[Math.floor(Math.random() * _punkte.length)];
        conn.sendFile(m.chat, 'https://telegra.ph/file/d3bc1d7a97c62d3baaf73.jpg', 'rare.jpg', `*Seltener Airdrop!* Du hast eine seltene Airdrop-Kiste erhalten!\n\n*Belohnungen:*\n‚Ä¢ *Limit:* ${limit}\n‚Ä¢ *M√ºnzen:* ${m√ºnzen}\n‚Ä¢ *Punkte:* ${punkte}`, m);
        u.limit += parseInt(limit);
        u.M√ºnzen += parseInt(m√ºnzen);
        u.poin += parseInt(punkte);
        u.lastclaim = new Date * 1;
    } else {
        conn.sendFile(m.chat, 'https://telegra.ph/file/5d71027ecbcf771b299fb.jpg', 'zonk.jpg', `*Zonk Airdrop!* Deine Kiste war leer...\n\n*Belohnungen:*\n‚Ä¢ *M√ºnzen:* -1.000.000\n‚Ä¢ *Inhalt:* Luft`, m);
        u.M√ºnzen -= 1000000;
        u.lastclaim = new Date * 1;
    }

    /*setTimeout(() => {
        conn.reply(m.chat, `Zeit f√ºr eine neue *Airdrop*-Suche!`, m);
    }, timeout);*/
};

handler.help = ['airdrop'];
handler.tags = ['rpg'];
handler.command = /^(airdrop)$/i;
handler.group = true;
handler.rpg = true;
module.exports = handler;

function pickRandom(list) {
    return list[Math.floor(Math.random() * list.length)];
}

function clockString(ms) {
    let d = isNaN(ms) ? '--' : Math.floor(ms / 86400000);
    let h = isNaN(ms) ? '--' : Math.floor(ms / 3600000) % 24;
    let m = isNaN(ms) ? '--' : Math.floor(ms / 60000) % 60;
    let s = isNaN(ms) ? '--' : Math.floor(ms / 1000) % 60;
    return ['\n*' + d + '* _Tage_ ‚òÄÔ∏è\n ', '*' + h + '* _Stunden_ üïê\n ', '*' + m + '* _Minuten_ ‚è∞\n ', '*' + s + '* _Sekunden_ ‚è±Ô∏è '].map(v => v.toString().padStart(2, 0)).join('');
}
